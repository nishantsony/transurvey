/*
 * File: app/view/surveyPanel.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TranSafe.view.surveyPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.surveypanel',

    requires: [
        'Ext.Label',
        'Ext.Container',
        'Ext.Img',
        'Ext.field.Slider',
        'Ext.Button'
    ],

    config: {
        items: [
            {
                xtype: 'label',
                html: 'Venue: ',
                id: 'venueLblSurvey'
            },
            {
                xtype: 'container',
                items: [
                    {
                        xtype: 'container',
                        docked: 'top',
                        items: [
                            {
                                xtype: 'image',
                                docked: 'left',
                                height: 70,
                                width: 50,
                                src: 'Emoticons/emotion_sad.jpg'
                            },
                            {
                                xtype: 'image',
                                docked: 'right',
                                height: 70,
                                width: 50,
                                src: 'Emoticons/emotion_happy.jpg'
                            },
                            {
                                xtype: 'sliderfield',
                                docked: 'top',
                                id: 'sliderHappySad',
                                width: '',
                                clearIcon: false,
                                label: '',
                                labelAlign: 'top',
                                value: [
                                    0
                                ],
                                maxValue: 5,
                                minValue: -5
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        width: '',
                        items: [
                            {
                                xtype: 'image',
                                docked: 'right',
                                height: 70,
                                width: 50,
                                src: 'Emoticons/emotion_excited.jpg'
                            },
                            {
                                xtype: 'image',
                                docked: 'left',
                                height: 70,
                                width: 48,
                                src: 'Emoticons/emotion_bored.jpg'
                            },
                            {
                                xtype: 'sliderfield',
                                docked: 'top',
                                id: 'sliderExcitedBored',
                                width: '',
                                clearIcon: false,
                                label: '',
                                labelAlign: 'top',
                                value: [
                                    0
                                ],
                                maxValue: 5,
                                minValue: -5
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        items: [
                            {
                                xtype: 'image',
                                docked: 'right',
                                height: 70,
                                width: 50,
                                src: 'Emoticons/emotion_safe.jpg'
                            },
                            {
                                xtype: 'image',
                                docked: 'left',
                                height: 70,
                                width: 48,
                                src: 'Emoticons/emotion_scared.jpg'
                            },
                            {
                                xtype: 'sliderfield',
                                docked: 'top',
                                id: 'sliderSafeScared',
                                width: '',
                                clearIcon: false,
                                label: '',
                                labelAlign: 'top',
                                value: [
                                    0
                                ],
                                maxValue: 5,
                                minValue: -5
                            }
                        ]
                    },
                    {
                        xtype: 'container',
                        items: [
                            {
                                xtype: 'image',
                                docked: 'right',
                                height: 70,
                                width: 50,
                                src: 'Emoticons/emotion_peaceful.jpg'
                            },
                            {
                                xtype: 'image',
                                docked: 'left',
                                height: 70,
                                width: 48,
                                src: 'Emoticons/emotion_angry.jpg'
                            },
                            {
                                xtype: 'sliderfield',
                                docked: 'top',
                                id: 'sliderPeacefulAngry',
                                width: '',
                                clearIcon: false,
                                label: '',
                                labelAlign: 'top',
                                value: [
                                    0
                                ],
                                maxValue: 5,
                                minValue: -5
                            }
                        ]
                    },
                    {
                        xtype: 'label'
                    }
                ]
            },
            {
                xtype: 'button',
                handler: function(button, e) {
                    var currentdate = new Date();
                    var timestamp = currentdate.getFullYear() + "-"+(currentdate.getMonth()+1)  + "-" + currentdate.getDate() + "%20"  + currentdate.getHours() + "-"  + currentdate.getMinutes() + "-" + currentdate.getSeconds();
                    var chosenVenue = Ext.getCmp('venueLblSurvey').getHtml();
                    /*	getting feelings' values.
                    *	if < 0 this is a negative feeling Sad rather than Happy, Angry rather than Peacful etc.
                    *	for this we calculate |val| and store it in an array along with all the others.
                    *	if = 0 this is neutral
                    *	if > 0 this is a positive feeling
                    */
                    var tempFeelingArray = new Array();
                    tempFeelingArray.push(Ext.getCmp('sliderHappySad').getValue()[0]);
                    tempFeelingArray.push(Ext.getCmp('sliderExcitedBored').getValue()[0]);
                    tempFeelingArray.push(Ext.getCmp('sliderSafeScared').getValue()[0]);
                    tempFeelingArray.push(Ext.getCmp('sliderPeacefulAngry').getValue()[0]);
                    var feelingsValues = new Array();
                    console.log(tempFeelingArray);
                    for(var i = 0; i < 4; i++){
                        feelingsValues=setFeelings(feelingsValues, tempFeelingArray[i]);
                    }
                    console.log(feelingsValues);
                    Ext.Ajax.request({
                        url: 'proxy.php?url=http://115.146.86.216:8080/TransNet/services/SurveyBO/SaveSurverWithoutPersonalDetails?survey='+timestamp+'{=|||||||||=}survey='+chosenVenue+'{=|||||||||=}feeling='+HAPPY_TO_SERVER()+'|'+feelingsValues[HAPPY_INDEX]+'{=|||||||||=}feeling='+SAD_TO_SERVER()+'|'+feelingsValues[SAD_INDEX]+'{=|||||||||=}feeling='+EXCITED_TO_SERVER()+'|'+feelingsValues[EXCITED_INDEX]+'{=|||||||||=}feeling='+BORED_TO_SERVER()+'|'+feelingsValues[BORED_INDEX]+'{=|||||||||=}feeling='+SAFE_TO_SERVER()+'|'+feelingsValues[SAFE_INDEX]+'{=|||||||||=}feeling='+SCARED_TO_SERVER()+'|'+feelingsValues[SCARED_INDEX]+'{=|||||||||=}feeling='+PEACEFUL_TO_SERVER()+'|'+feelingsValues[PEACEFUL_INDEX]+'{=|||||||||=}feeling='+ANGRY_TO_SERVER()+'|'+feelingsValues[ANGRY_INDEX]+'',
                        //    url: 'proxy.php?url=http://115.146.86.216:8080/TransNet/services/SurveyBO/SaveSurverWithoutPersonalDetails',
                        method: 'GET',
                        success: function (response, options) { console.log(response); },
                        failure: function (response, options) { console.log('no!');}
                    });
                },
                docked: 'bottom',
                itemId: 'mybutton2',
                ui: 'action-round',
                text: 'Send to web service'
            }
        ]
    }

});